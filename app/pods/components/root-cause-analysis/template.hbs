<div class="object-browser layout-row">
    <div class="panel container flex-20">
        <div class="input-fields layout-column layout-align-space-between">
            <span class="flex-80">
                <h3>Network Analysis Input</h3>
                <span>Selected Relationship:
                {{#paper-menu as |menu|}}
                    {{#menu.trigger width=4}}
                        {{#paper-button}}{{if root root.label edges.[0].label}}{{/paper-button}}
                    {{/menu.trigger}}
                    {{#menu.content width=2 as |content|}}
                        {{#each edges as |item|}}
                        {{#content.menu-item onClick=(action 'updateRoot' item)}}
                            {{paper-icon item.label}}
                            <span>{{item.label}}</span>
                        {{/content.menu-item}}
                        {{/each}}
                    {{/menu.content}}
                {{/paper-menu}}</span>
            </span>
            Number of Nodes: {{paper-input type="number" max="25" errorMessages=(hash max="Enter 25 or less.") placeholder=numNodes autofocus=false value=numNodes onChange=(action (mut numNodes))}}
            Branching: {{paper-input type="number" max="2" placeholder=branching autofocus=false value=branching onChange=(action (mut branching))}}
            {{#paper-button class="layout layout-align-end" raised=true onClick=(action 'regenGraph') primary=false}}Regenerate Nodes{{/paper-button}}
            {{#paper-button class="layout layout-align-end" raised=true onClick=(action 'toggleRecompute') primary=true}}Recompute{{/paper-button}}
        </div>
        
    </div>
    <div class="object-list layout-column container flex-80">
        <div class="graph-container container-segment flex-50 layout-row">
            {{#visjs-network class="graph-view flex-80"}}
                {{#each nodes as |node|}}
                {{visjs-node nId=node.id label=node.id color=(if (or (eq root.source node.id) (eq root.target node.id)) '#ff0000' '#97c2fc')}}
                {{/each}}
                {{#each edges as |edge|}}
                {{visjs-edge from=edge.source to=edge.target color='#ff0000'}}
                {{/each}}
            {{/visjs-network}}
            {{#paper-list class="scroll-div flex-20"}}
            {{#paper-subheader}}{{allPaths.length}} Paths from '{{root.source}}' to '{{root.target}}' <br/>{{pathStats.iterations}} Iterations in {{pathStats.time}}s{{/paper-subheader}}
            {{#each allPaths as |path|}}
                {{#paper-item onClick=(action 'togglePathDetails' path) class="md-3-line"}}

                <div class="md-list-item-text">
                    <p>
                    {{#each path.path as |item i|}}
                    {{item}}
                    {{#if (not (eq i (sub path.path.length 1)))}}
                     ↔ 
                    {{/if}}
                    {{/each}}<br/>
                    Degredation Variance: {{round path.degredationVariance decimals=3}}
                    </p>
                </div>
                {{/paper-item}}
            {{/each}}
            {{/paper-list}}
            {{#paper-list class="scroll-div flex-20"}}
            {{#paper-subheader}}{{heuristicPaths.length}} Paths from '{{root.source}}' to '{{root.target}}' <br/> {{hPathStats.iterations}} iterations in {{hPathStats.time}}s{{/paper-subheader}}
            {{#each heuristicPaths as |path|}}
                {{#paper-item onClick=(action 'togglePathDetails' path) class="md-3-line"}}

                <div class="md-list-item-text">
                    <p>
                    {{#each path.path as |item i|}}
                    {{item}}
                    {{#if (not (eq i (sub path.path.length 1)))}}
                     ↔ 
                    {{/if}}
                    {{/each}}<br/>
                    Degredation Variance: {{round path.degredationVariance decimals=3}}
                    </p>
                </div>
                {{/paper-item}}
            {{/each}}
            {{/paper-list}}
        </div>
        {{paper-divider}}

        {{#paper-list class="scroll-div flex-50"}}
            {{#paper-subheader}}Mock Network Events{{/paper-subheader}}
            {{#each edges as |item|}}
                {{#paper-item onClick=(action 'openModal' item) class="md-3-line"}}
                
                <div class="md-list-item-text">
                    <h3>Network Performance Object:<b>{{item.id}}</b></h3>
                    <p>Source: {{item.source}} Target: {{item.target}} Degredation: {{item.data}}</p>
                </div>
                {{/paper-item}}
            {{/each}}
        {{/paper-list}}
        
    </div>
</div>

{{#if computeToast}}
  {{#paper-toast capsule=true onClose=(action "toggleToast") as |toast|}}
    {{#toast.text}}Analysis Complete{{/toast.text}}
    {{#paper-button accent=true onClick=(action "toggleToast")}}Undo{{/paper-button}}
  {{/paper-toast}}
{{/if}}

{{#if editEdge}}
  {{#paper-dialog fullscreen=true onClose=(action "closeModal" editingEdge "cancel")}}

    {{#paper-dialog-content}}
      <h2 class="md-title">Edit Edge '{{editingEdge.label}}'</h2>
      <h2>Data:</h2>
      {{paper-input placeholder=editingEdge.data autofocus=true value=editingEdge.data onChange=(action (mut editingEdge.data))}}
    {{/paper-dialog-content}}

    {{#paper-dialog-actions class="layout-row"}}
      <span class="flex"></span>
      {{#paper-button primary=true onClick=(action "closeModal" editingEdge "cancel")}}Cancel{{/paper-button}}
      {{#paper-button primary=true onClick=(action "closeModal" editingEdge "save")}}Save{{/paper-button}}
    {{/paper-dialog-actions}}

  {{/paper-dialog}}
{{/if}}

{{#if pathDetails}}
  {{#paper-dialog fullscreen=true onClose=(action "togglePathDetails")}}
    {{#paper-dialog-content}}
      <h2 class="md-title">Path Details</h2>
      {{#each selectedItem as |edge|}}
        {{edge.data.label}}
        <div class="model-timestamp">
            {{#each edge.data.data as |timestamp|}}
            
            <div> Delay:
                {{#if (gt timestamp.metrics.delayP95.major 0)}}
                Major:{{timestamp.metrics.delayP95.major}}
                {{/if}}
                {{#if (gt timestamp.metrics.delayP95.critical 0)}}
                Critical: {{timestamp.metrics.delayP95.critical}}
                {{/if}}
            </div>
            <div> Jitter:
                {{#if (gt timestamp.metrics.jitterP95.major 0)}}
                Major:{{timestamp.metrics.jitterP95.major}}
                {{/if}}
                {{#if (gt timestamp.metrics.jitterP95.critical 0)}}
                Critical: {{timestamp.metrics.jitterP95.critical}}
                {{/if}}
            </div>
            <div> PacketLost:
                {{#if (gt timestamp.metrics.packetsLost.major 0)}}
                Major:{{timestamp.metrics.packetsLost.major}}
                {{/if}}
                {{#if (gt timestamp.metrics.packetsLost.critical 0)}}
                Critical: {{timestamp.metrics.packetsLost.critical}}
                {{/if}}
            </div>
            
            {{/each}}
    
        </div>
      {{/each}}
    {{/paper-dialog-content}}

    {{#paper-dialog-actions class="layout-row"}}
      <span class="flex"></span>
      {{#paper-button primary=true onClick=(action "togglePathDetails")}}Close{{/paper-button}}
    {{/paper-dialog-actions}}

  {{/paper-dialog}}
{{/if}}

{{yield}}